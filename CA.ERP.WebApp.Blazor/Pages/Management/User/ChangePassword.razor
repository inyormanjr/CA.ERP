@page "/management/user/{id}/password"

@using CA.ERP.Shared.Dto.Branch;
@using CA.ERP.Shared.Dto.User;
@using CA.ERP.Shared.Dto.Supplier;
@using CA.ERP.Shared.Dto.MasterProduct;
@using CA.ERP.WebApp.Blazor.ViewModels.Management.User;

@layout MainLayout




@inherits ViewBase<ChangePasswordViewModel>

@attribute [Authorize(Roles = "Admin, Manager")]

<MudContainer>
    <MudPaper Class="pa-4">
        <MudGrid>
            <MudItem xs="10">
                <MudText Typo="Typo.h6">Change Password</MudText>
            </MudItem>

        </MudGrid>
        @if ((ViewModel.Errors?.Length ?? 0) > 0)
        {
            @foreach (var error in ViewModel.Errors)
            {
                <MudAlert Severity="Severity.Error">@error</MudAlert>
            }
        }
        <EditForm Model="@ViewModel.PasswordUpdate" OnValidSubmit="@OnValidSubmit">
            <DataAnnotationsValidator />
            <MudTextField T="string" Label="Password" HelperText="Choose a strong password"
                          InputType="InputType.Password"
                          @bind-Value="ViewModel.PasswordUpdate.Password" For="@(() => ViewModel.PasswordUpdate.Password)" />
            <MudTextField T="string"
                          Label="Confirm Password" HelperText="Repeat the password" InputType="InputType.Password" @bind-Value="ViewModel.PasswordUpdate.ConfirmPassword" For="@(() => ViewModel.PasswordUpdate.ConfirmPassword)" />



            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Submit</MudButton>

        </EditForm>


    </MudPaper>
</MudContainer>

@code {
    [Parameter]
    public string Id { get; set; }
    bool success;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ViewModel.UserId = Id;
    }

    private void OnValidSubmit(EditContext context)
    {


        success = true;
        StateHasChanged();

        ViewModel.Submit().ConfigureAwait(false);


    }



}
