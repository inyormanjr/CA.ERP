@page "/stock/"

@using CA.ERP.Shared.Dto.Stock;
@using CA.ERP.WebApp.Blazor.ViewModels.Stock;
@using CA.ERP.WebApp.Blazor.Services;

@inherits ViewBase<StockListViewModel>

@attribute [Authorize]

<MudContainer>
    <MudPaper Class="mt-4 pa-4">
        <MudText Typo="Typo.h6">Stocks</MudText>
        <MudGrid>
            
        </MudGrid>
    </MudPaper>
    <MudTable Class="mt-8" ServerData="@ServerReload" Hover="true" Striped="true" @ref="@table" T="StockView">

        <HeaderContent>
            <MudTh>Branch Name</MudTh>
            <MudTh>Brand Name</MudTh>
            <MudTh>Model</MudTh>
            <MudTh>Stock Number</MudTh>
            <MudTh>Serial Number</MudTh>
            <MudTh>Cost Price</MudTh>
            <MudTh>Stock Status</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Branch Name">@context.BranchName</MudTd>
            <MudTd DataLabel="Brand Name">@context.BrandName</MudTd>
            <MudTd DataLabel="Model">@context.Model</MudTd>
            <MudTd DataLabel="Stock Number">@context.StockNumber</MudTd>
            <MudTd DataLabel="Serial Number">@context.SerialNumber</MudTd>
            <MudTd DataLabel="Cost Price">@context.CostPrice</MudTd>
            <MudTd DataLabel="Stock Status">@context.StockStatus.ToString()</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />

        </PagerContent>
    </MudTable>

</MudContainer>


@code{
    private MudTable<StockView> table;


    private async Task<TableData<StockView>> ServerReload(TableState state)
    {
        var pageinatedStocks = await ViewModel.GetStocksAsync(state.Page, state.PageSize);
        return new TableData<StockView>() { TotalItems = pageinatedStocks.TotalCount, Items = pageinatedStocks.Data };
    }

    public void Search()
    {
        table.ReloadServerData();
    }



}
