name: .NET Web API Dev Deploy

on:
  push:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore CA.ERP.sln
    - name: Build
      run: dotnet build --no-restore CA.ERP.sln
    - name: Test
      run: dotnet test  --no-build CA.ERP.sln
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and push webapp
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./CA.ERP.WebApp/Dockerfile
        push: true
        tags: vic0111/caerpwebapp:dev

    - name: Build and push identity
      id: docker_build_identity
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./CA.Identity/Dockerfile
        push: true
        tags: vic0111/caidentity:dev
    - name: Build and push report
      id: docker_build_report
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./CA.ERP.Reporting/Dockerfile
        push: true
        tags: vic0111/caerpreporting:dev
    - name: Build and push frontend
      id: docker_build_frontend
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./CA.ERP.WebApp.Blazor/Dockerfile
        push: true
        tags: vic0111/caerpwebappblazor:dev

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

